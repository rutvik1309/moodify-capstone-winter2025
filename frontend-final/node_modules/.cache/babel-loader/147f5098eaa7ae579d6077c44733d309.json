{"ast":null,"code":"import React,{useEffect,useState}from\"react\";const Recommendations=()=>{const[recommendations,setRecommendations]=useState([]);const[message,setMessage]=useState(\"\");useEffect(()=>{const fetchRecommendations=async()=>{const token=localStorage.getItem(\"spotify_token\");if(!token){setMessage(\"Please log in with Spotify first.\");return;}try{var _topTracksData$items;// Step 1: Fetch top tracks\nconst topTracksRes=await fetch(\"https://api.spotify.com/v1/me/top/tracks?limit=5\",{headers:{Authorization:`Bearer ${token}`}});const topTracksData=await topTracksRes.json();const rawSeeds=((_topTracksData$items=topTracksData.items)===null||_topTracksData$items===void 0?void 0:_topTracksData$items.map(track=>track.id))||[];if(rawSeeds.length===0){setMessage(\"No top tracks found. Listen to more songs on Spotify.\");return;}// Step 2: Validate usable seed tracks\nconst getValidSeeds=async seeds=>{const valid=[];for(const id of seeds){var _data$tracks;const res=await fetch(`https://api.spotify.com/v1/recommendations?seed_tracks=${id}&limit=1`,{headers:{Authorization:`Bearer ${token}`}});const data=await res.json();if(res.ok&&((_data$tracks=data.tracks)===null||_data$tracks===void 0?void 0:_data$tracks.length)>0)valid.push(id);if(valid.length>=3)break;}return valid;};const validSeedTracks=await getValidSeeds(rawSeeds);console.log(\"‚úÖ Valid seeds:\",validSeedTracks);if(validSeedTracks.length===0){setMessage(\"No valid top tracks for generating recommendations. Try again later.\");return;}// Step 3: Fetch final recommendations\nconst recRes=await fetch(`https://api.spotify.com/v1/recommendations?seed_tracks=${validSeedTracks.join(\",\")}&limit=10`,{headers:{Authorization:`Bearer ${token}`}});if(!recRes.ok){const text=await recRes.text();console.error(\"‚ùå Recommendations failed:\",text);setMessage(\"Failed to load recommendations. Spotify token might be expired.\");return;}const recData=await recRes.json();setRecommendations(recData.tracks||[]);if(!recData.tracks||recData.tracks.length===0){setMessage(\"No recommendations available at the moment.\");}}catch(err){console.error(\"üí• Unexpected error:\",err);setMessage(\"Error loading recommendations. Try refreshing.\");}};fetchRecommendations();},[]);return/*#__PURE__*/React.createElement(\"div\",{style:{padding:\"20px\"}},/*#__PURE__*/React.createElement(\"h2\",null,\"\\uD83C\\uDFA7 Recommended For You\"),message&&/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},message),/*#__PURE__*/React.createElement(\"ul\",null,recommendations.map(track=>{var _track$album$images$;return/*#__PURE__*/React.createElement(\"li\",{key:track.id,style:{marginBottom:\"10px\"}},/*#__PURE__*/React.createElement(\"img\",{src:(_track$album$images$=track.album.images[0])===null||_track$album$images$===void 0?void 0:_track$album$images$.url,alt:\"cover\",width:\"50\",style:{marginRight:\"10px\",verticalAlign:\"middle\"}}),/*#__PURE__*/React.createElement(\"a\",{href:track.external_urls.spotify,target:\"_blank\",rel:\"noreferrer\",style:{textDecoration:\"none\",color:\"#1DB954\"}},track.name,\" - \",track.artists[0].name));})));};export default Recommendations;","map":{"version":3,"names":["React","useEffect","useState","Recommendations","recommendations","setRecommendations","message","setMessage","fetchRecommendations","token","localStorage","getItem","_topTracksData$items","topTracksRes","fetch","headers","Authorization","topTracksData","json","rawSeeds","items","map","track","id","length","getValidSeeds","seeds","valid","_data$tracks","res","data","ok","tracks","push","validSeedTracks","console","log","recRes","join","text","error","recData","err","createElement","style","padding","color","_track$album$images$","key","marginBottom","src","album","images","url","alt","width","marginRight","verticalAlign","href","external_urls","spotify","target","rel","textDecoration","name","artists"],"sources":["/Users/rutvikzalavadiya/Desktop/capstone-1/capstone/frontend-final/src/Recommendations.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Recommendations = () => {\n  const [recommendations, setRecommendations] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      const token = localStorage.getItem(\"spotify_token\");\n      if (!token) {\n        setMessage(\"Please log in with Spotify first.\");\n        return;\n      }\n\n      try {\n        // Step 1: Fetch top tracks\n        const topTracksRes = await fetch(\"https://api.spotify.com/v1/me/top/tracks?limit=5\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const topTracksData = await topTracksRes.json();\n        const rawSeeds = topTracksData.items?.map((track) => track.id) || [];\n\n        if (rawSeeds.length === 0) {\n          setMessage(\"No top tracks found. Listen to more songs on Spotify.\");\n          return;\n        }\n\n        // Step 2: Validate usable seed tracks\n        const getValidSeeds = async (seeds) => {\n          const valid = [];\n          for (const id of seeds) {\n            const res = await fetch(\n              `https://api.spotify.com/v1/recommendations?seed_tracks=${id}&limit=1`,\n              { headers: { Authorization: `Bearer ${token}` } }\n            );\n            const data = await res.json();\n            if (res.ok && data.tracks?.length > 0) valid.push(id);\n            if (valid.length >= 3) break;\n          }\n          return valid;\n        };\n\n        const validSeedTracks = await getValidSeeds(rawSeeds);\n        console.log(\"‚úÖ Valid seeds:\", validSeedTracks);\n\n        if (validSeedTracks.length === 0) {\n          setMessage(\"No valid top tracks for generating recommendations. Try again later.\");\n          return;\n        }\n\n        // Step 3: Fetch final recommendations\n        const recRes = await fetch(\n          `https://api.spotify.com/v1/recommendations?seed_tracks=${validSeedTracks.join(\",\")}&limit=10`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n\n        if (!recRes.ok) {\n          const text = await recRes.text();\n          console.error(\"‚ùå Recommendations failed:\", text);\n          setMessage(\"Failed to load recommendations. Spotify token might be expired.\");\n          return;\n        }\n\n        const recData = await recRes.json();\n        setRecommendations(recData.tracks || []);\n        if (!recData.tracks || recData.tracks.length === 0) {\n          setMessage(\"No recommendations available at the moment.\");\n        }\n      } catch (err) {\n        console.error(\"üí• Unexpected error:\", err);\n        setMessage(\"Error loading recommendations. Try refreshing.\");\n      }\n    };\n\n    fetchRecommendations();\n  }, []);\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>üéß Recommended For You</h2>\n      {message && <p style={{ color: \"red\" }}>{message}</p>}\n      <ul>\n        {recommendations.map((track) => (\n          <li key={track.id} style={{ marginBottom: \"10px\" }}>\n            <img\n              src={track.album.images[0]?.url}\n              alt=\"cover\"\n              width=\"50\"\n              style={{ marginRight: \"10px\", verticalAlign: \"middle\" }}\n            />\n            <a\n              href={track.external_urls.spotify}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ textDecoration: \"none\", color: \"#1DB954\" }}\n            >\n              {track.name} - {track.artists[0].name}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Recommendations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}