{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"./Home.css\";import SpotifyPlayer from\"./SpotifyPlayer\";// ✅ Token refresh helper\nasync function refreshSpotifyToken(){const refreshToken=localStorage.getItem(\"spotify_refresh_token\");try{const res=await axios.post(\"https://moodify-capstone-winter2025.onrender.com/api/auth/refresh-token\",{refresh_token:refreshToken});const{access_token}=res.data;localStorage.setItem(\"spotify_token\",access_token);return access_token;}catch(err){console.error(\"Failed to refresh token:\",err);alert(\"Spotify session expired. Please log in again.\");window.location.href=\"/\";}}const Home=()=>{const[mood,setMood]=useState(\"\");const[playlist,setPlaylist]=useState([]);const[message,setMessage]=useState(\"\");const[playlistName,setPlaylistName]=useState(\"\");const[isListening,setIsListening]=useState(false);const[isNaming,setIsNaming]=useState(false);const[recommendations,setRecommendations]=useState([]);const username=localStorage.getItem(\"username\");useEffect(()=>{const spotifyToken=localStorage.getItem(\"spotify_token\");if(!spotifyToken){alert(\"Spotify login failed. Please try again.\");window.location.href=\"/\";}},[]);// Removed the extra closing brace here\nconst ensureValidToken=async()=>{let token=localStorage.getItem(\"spotify_token\");const expiryTime=localStorage.getItem(\"spotify_token_expires_at\");const now=Date.now();if(!token||!expiryTime||now>=Number(expiryTime)){token=await refreshSpotifyToken();}return token;};const fetchPlaylist=async mood=>{if(!mood.trim()){setMessage(\"Please enter a mood first.\");return;}try{var _response$data,_response$data$playli;const token=localStorage.getItem(\"token\");const spotifyToken=await ensureValidToken();const userId=localStorage.getItem(\"user_id\");// Build the payload and log it for debugging purposes.\nconst payload={name:`Moodify - ${mood.charAt(0).toUpperCase()+mood.slice(1)} Vibes`,songs:[],mood,createdByVoice:false,voiceCommand:\"\",userId};console.log(\"Sending payload to generate playlist:\",payload);const response=await axios.post(\"https://moodify-capstone-winter2025.onrender.com/api/playlist/generate\",payload,{headers:{Authorization:`Bearer ${token}`,\"x-spotify-token\":spotifyToken}});console.log(\"Playlist response:\",response.data);setPlaylist(((_response$data=response.data)===null||_response$data===void 0?void 0:(_response$data$playli=_response$data.playlist)===null||_response$data$playli===void 0?void 0:_response$data$playli.songs)||[]);setMessage(\"\");}catch(err){var _err$response,_err$response$data;console.error(\"Error generating playlist:\",err.response||err);setMessage(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||\"Failed to generate playlist.\");}};// Dummy classifyMood function for demonstration purposes.\n// Replace this function with your actual implementation.\nconst classifyMood=async transcript=>{return transcript.trim();};const startListening=()=>{try{const SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;if(!SpeechRecognition){setMessage(\"Speech recognition is not supported in your browser.\");return;}const recognition=new SpeechRecognition();recognition.lang=\"en-US\";recognition.onstart=()=>setIsListening(true);recognition.onresult=async event=>{const transcript=event.results[0][0].transcript;setMood(transcript);// ✅ Classify mood using your Python ML API\nconst predictedMood=await classifyMood(transcript);if(!predictedMood){setMessage(\"Unable to determine mood. Try again.\");return;}fetchPlaylist(predictedMood);};recognition.onerror=event=>{console.error(\"Speech recognition error:\",event);setMessage(`Speech recognition error: ${event.error}`);};recognition.onend=()=>setIsListening(false);recognition.start();}catch(err){console.error(\"Speech recognition failed:\",err);setMessage(\"Speech recognition not supported or blocked.\");}};const startNamingByVoice=()=>{try{const SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;if(!SpeechRecognition){setMessage(\"Speech recognition is not supported in your browser.\");return;}const recognition=new SpeechRecognition();recognition.lang=\"en-US\";recognition.start();recognition.onstart=()=>setIsNaming(true);recognition.onresult=event=>{const transcript=event.results[0][0].transcript;setPlaylistName(transcript);};recognition.onerror=event=>{console.error(\"Voice naming error:\",event);setMessage(`Voice naming error: ${event.error}`);};recognition.onend=()=>setIsNaming(false);}catch(err){console.error(\"Voice naming failed:\",err);setMessage(\"Voice naming not supported or blocked.\");}};const playTrack=async uri=>{const token=localStorage.getItem(\"spotify_token\");const deviceId=localStorage.getItem(\"device_id\");if(!token||!deviceId){alert(\"Spotify is not connected.\");return;}try{await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`,{method:\"PUT\",headers:{Authorization:`Bearer ${token}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({uris:[uri]})});}catch(err){console.error(\"Error playing track:\",err);alert(\"Playback failed. Make sure Spotify is open and logged in.\");}};const savePlaylist=async()=>{const token=localStorage.getItem(\"token\");const userId=localStorage.getItem(\"user_id\");if(!playlist.length){alert(\"Please generate a playlist first.\");return;}try{await axios.post(\"https://moodify-capstone-winter2025.onrender.com/api/playlist/save\",{name:playlistName,songs:playlist,mood,userId},{headers:{Authorization:`Bearer ${token}`}});alert(\"Playlist saved successfully!\");setPlaylistName(\"\");}catch(err){console.error(\"Failed to save playlist:\",err);alert(\"Failed to save playlist.\");}};const saveToSpotify=async()=>{const token=localStorage.getItem(\"spotify_token\");const spotifyUserId=localStorage.getItem(\"spotify_user_id\");if(!playlistName||playlist.length===0){alert(\"Please generate and name a playlist first.\");return;}// 🔍 Log here\nconsole.log(\"🎵 Playlist being sent to Spotify:\",playlist);const uris=playlist.map(track=>{var _track$url;const match=(_track$url=track.url)===null||_track$url===void 0?void 0:_track$url.match(/track\\/([a-zA-Z0-9]+)/);return match?`spotify:track:${match[1]}`:null;}).filter(Boolean);// 🔍 Log URIs\nconsole.log(\"🎯 Extracted URIs:\",uris);if(uris.length===0){alert(\"No valid tracks to add. Please regenerate playlist.\");return;}try{var _created$external_url;// Step 1: Create the playlist\nconst createRes=await fetch(`https://api.spotify.com/v1/users/${spotifyUserId}/playlists`,{method:\"POST\",headers:{Authorization:`Bearer ${token}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({name:playlistName,description:\"Created with Moodify 🎵\",public:false})});const created=await createRes.json();if(!createRes.ok||!created.id){console.error(\"Spotify playlist creation failed:\",created);alert(\"Spotify playlist creation failed.\");return;}// Step 2: Add tracks\nawait fetch(`https://api.spotify.com/v1/playlists/${created.id}/tracks`,{method:\"POST\",headers:{Authorization:`Bearer ${token}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({uris})});alert(\"✅ Playlist saved to your Spotify account!\");window.open(((_created$external_url=created.external_urls)===null||_created$external_url===void 0?void 0:_created$external_url.spotify)||\"https://open.spotify.com\",\"_blank\");}catch(err){console.error(\"❌ Failed to sync to Spotify:\",err);alert(\"Failed to save playlist to Spotify.\");}};const handleLogout=()=>{localStorage.removeItem(\"token\");localStorage.removeItem(\"username\");localStorage.removeItem(\"spotify_token\");localStorage.removeItem(\"user_id\");window.location.href=\"/login\";};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(SpotifyPlayer,null),/*#__PURE__*/React.createElement(\"nav\",{style:{background:\"#1DB954\",padding:\"10px\"}},/*#__PURE__*/React.createElement(\"a\",{href:\"/home\",style:{color:\"#fff\",marginRight:\"15px\"}},\"Home\"),/*#__PURE__*/React.createElement(\"a\",{href:\"/recommendations\",style:{color:\"#fff\",marginRight:\"15px\"}},\"Recommendations\"),/*#__PURE__*/React.createElement(\"a\",{href:\"/playlists\",style:{color:\"#fff\"}},\"My Playlists\")),/*#__PURE__*/React.createElement(\"h1\",null,\"Welcome to Moodify!\"),username&&/*#__PURE__*/React.createElement(\"h2\",null,\"Login with Spotify to start Moodify\",\" \",/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"headphone\"},\"\\uD83C\\uDFA7\")),/*#__PURE__*/React.createElement(\"button\",{onClick:handleLogout},\"Logout\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Generate Playlist\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your mood (e.g., happy, sad)\",value:mood,onChange:e=>setMood(e.target.value)}),/*#__PURE__*/React.createElement(\"button\",{onClick:()=>fetchPlaylist(mood)},\"Generate Playlist\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:startListening,disabled:isListening},isListening?\"Listening...\":\"Speak Your Mood\")),/*#__PURE__*/React.createElement(\"h3\",null,\"Playlist:\"),message&&/*#__PURE__*/React.createElement(\"p\",null,message),/*#__PURE__*/React.createElement(\"ul\",null,playlist.map((track,index)=>/*#__PURE__*/React.createElement(\"li\",{key:index,style:{marginBottom:\"12px\",display:\"flex\",alignItems:\"center\"}},track.albumImage&&/*#__PURE__*/React.createElement(\"img\",{src:track.albumImage,alt:\"Album Cover\",width:\"50\",height:\"50\",style:{borderRadius:\"5px\",marginRight:\"10px\"}}),/*#__PURE__*/React.createElement(\"div\",{style:{flex:1}},/*#__PURE__*/React.createElement(\"a\",{href:track.url,target:\"_blank\",rel:\"noopener noreferrer\",style:{textDecoration:\"none\",color:\"#1DB954\"}},track.name,\" \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#555\"}},\"\\u2013 \",track.artist)),track.spotify_uri&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:()=>playTrack(track.spotify_uri),style:{marginTop:\"5px\"}},\"\\u25B6\\uFE0F Play in Moodify\")))))),playlist.length>0&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Custom Playlist Name (optional)\",value:playlistName,onChange:e=>setPlaylistName(e.target.value),style:{marginTop:\"10px\",padding:\"8px\",width:\"80%\"}}),/*#__PURE__*/React.createElement(\"button\",{onClick:startNamingByVoice,disabled:isNaming,style:{marginLeft:\"10px\",padding:\"8px\"}},\"\\uD83C\\uDFA4 \",isNaming?\"Listening...\":\"Name by Voice\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{onClick:savePlaylist,style:{marginTop:\"10px\"}},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"save\"},\"\\uD83D\\uDCBE\"),\" \",\"Save this Playlist\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{onClick:saveToSpotify,style:{marginTop:\"10px\"}},\"\\uD83D\\uDC9A Save to Spotify\")),/*#__PURE__*/React.createElement(\"h3\",null,\"Recommended for You\"),/*#__PURE__*/React.createElement(\"button\",{onClick:async()=>{try{var _topTracksData$items;const token=localStorage.getItem(\"spotify_token\");// ✅ New validation logic: test each track with /recommendations\nconst getValidSeedTracks=async(trackIds,token)=>{const valid=[];for(const id of trackIds){const res=await fetch(`https://api.spotify.com/v1/recommendations?seed_tracks=${id}&limit=1`,{headers:{Authorization:`Bearer ${token}`}});if(res.ok){const data=await res.json();if(data.tracks&&data.tracks.length>0){valid.push(id);}else{console.warn(`⚠️ No recommendations for seed track: ${id}`);}}else{console.warn(`❌ Track not valid for recommendations: ${id} - Status ${res.status}`);}if(valid.length>=3)break;// Spotify allows max 5 seeds, we limit to 3\n}return valid;};// Step 1: Get user's top tracks\nconst topTracksRes=await fetch(\"https://api.spotify.com/v1/me/top/tracks?limit=5\",{headers:{Authorization:`Bearer ${token}`}});const topTracksText=await topTracksRes.text();if(!topTracksRes.ok){console.error(\"❌ Top tracks fetch failed:\",topTracksRes.status,topTracksText);setMessage(\"Failed to fetch top tracks.\");return;}let topTracksData;try{topTracksData=JSON.parse(topTracksText);}catch(e){console.error(\"❌ Failed to parse top tracks JSON:\",e,topTracksText);setMessage(\"Error parsing top tracks from Spotify.\");return;}const rawSeedTracks=((_topTracksData$items=topTracksData.items)===null||_topTracksData$items===void 0?void 0:_topTracksData$items.map(track=>track.id))||[];console.log(\"🎯 Raw seed tracks:\",rawSeedTracks);if(rawSeedTracks.length===0){setMessage(\"No top tracks found. Please listen to more songs on Spotify.\");return;}// Step 2: Validate recommendation capability\nconst validSeedTracks=await getValidSeedTracks(rawSeedTracks,token);console.log(\"✅ Valid recommendation seeds:\",validSeedTracks);if(validSeedTracks.length===0){setMessage(\"No valid tracks found for recommendations. Try listening to more music on Spotify.\");return;}// Step 3: Fetch recommendations\nconst recRes=await fetch(`https://api.spotify.com/v1/recommendations?seed_tracks=${validSeedTracks.join(\",\")}&limit=10`,{headers:{Authorization:`Bearer ${token}`}});const recText=await recRes.text();if(!recRes.ok){console.error(\"❌ Recommendations fetch failed:\",recRes.status,recText);setMessage(\"Failed to fetch recommendations.\");return;}let recData;try{recData=JSON.parse(recText);}catch(e){console.error(\"❌ Failed to parse recommendations JSON:\",e,recText);setMessage(\"Error parsing recommendations from Spotify.\");return;}console.log(\"🎁 Final Recommendations:\",recData);setRecommendations(Array.isArray(recData.tracks)?recData.tracks.map(track=>{var _track$artists$,_track$album$images$;return{name:track.name,artist:((_track$artists$=track.artists[0])===null||_track$artists$===void 0?void 0:_track$artists$.name)||\"Unknown\",albumImage:((_track$album$images$=track.album.images[0])===null||_track$album$images$===void 0?void 0:_track$album$images$.url)||\"\",url:track.external_urls.spotify,spotify_uri:track.uri};}):[]);}catch(err){console.error(\"💥 Recommendation fetch failed:\",err);setMessage(\"Failed to fetch recommendations.\");}}},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"target\"},\"\\uD83C\\uDFAF\"),\" \",\"Show Personalized Recommendations\"),/*#__PURE__*/React.createElement(\"ul\",null,recommendations.map((track,index)=>/*#__PURE__*/React.createElement(\"li\",{key:index,style:{marginBottom:\"12px\",display:\"flex\",alignItems:\"center\"}},track.albumImage&&/*#__PURE__*/React.createElement(\"img\",{src:track.albumImage,alt:\"Album Cover\",width:\"50\",height:\"50\",style:{borderRadius:\"5px\",marginRight:\"10px\"}}),/*#__PURE__*/React.createElement(\"div\",{style:{flex:1}},/*#__PURE__*/React.createElement(\"a\",{href:track.url,target:\"_blank\",rel:\"noopener noreferrer\",style:{textDecoration:\"none\",color:\"#1DB954\"}},track.name,\" \",/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#555\"}},\"\\u2013 \",track.artist)),track.spotify_uri&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:()=>playTrack(track.spotify_uri),style:{marginTop:\"5px\"}},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"target\"},\"\\u25B6\\uFE0F\"),\" \",\"Play in Moodify\")))))));};export default Home;","map":{"version":3,"names":["React","useState","useEffect","axios","SpotifyPlayer","refreshSpotifyToken","refreshToken","localStorage","getItem","res","post","refresh_token","access_token","data","setItem","err","console","error","alert","window","location","href","Home","mood","setMood","playlist","setPlaylist","message","setMessage","playlistName","setPlaylistName","isListening","setIsListening","isNaming","setIsNaming","recommendations","setRecommendations","username","spotifyToken","ensureValidToken","token","expiryTime","now","Date","Number","fetchPlaylist","trim","_response$data","_response$data$playli","userId","payload","name","charAt","toUpperCase","slice","songs","createdByVoice","voiceCommand","log","response","headers","Authorization","_err$response","_err$response$data","classifyMood","transcript","startListening","SpeechRecognition","webkitSpeechRecognition","recognition","lang","onstart","onresult","event","results","predictedMood","onerror","onend","start","startNamingByVoice","playTrack","uri","deviceId","fetch","method","body","JSON","stringify","uris","savePlaylist","length","saveToSpotify","spotifyUserId","map","track","_track$url","match","url","filter","Boolean","_created$external_url","createRes","description","public","created","json","ok","id","open","external_urls","spotify","handleLogout","removeItem","createElement","className","style","background","padding","color","marginRight","role","onClick","type","placeholder","value","onChange","e","target","disabled","index","key","marginBottom","display","alignItems","albumImage","src","alt","width","height","borderRadius","flex","rel","textDecoration","artist","spotify_uri","marginTop","Fragment","marginLeft","_topTracksData$items","getValidSeedTracks","trackIds","valid","tracks","push","warn","status","topTracksRes","topTracksText","text","topTracksData","parse","rawSeedTracks","items","validSeedTracks","recRes","join","recText","recData","Array","isArray","_track$artists$","_track$album$images$","artists","album","images"],"sources":["/Users/rutvikzalavadiya/Desktop/capstone-1/capstone/frontend-final/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport SpotifyPlayer from \"./SpotifyPlayer\";\n\n// ✅ Token refresh helper\nasync function refreshSpotifyToken() {\n  const refreshToken = localStorage.getItem(\"spotify_refresh_token\");\n\n  try {\n    const res = await axios.post(\n      \"https://moodify-capstone-winter2025.onrender.com/api/auth/refresh-token\",\n      { refresh_token: refreshToken }\n    );\n\n    const { access_token } = res.data;\n    localStorage.setItem(\"spotify_token\", access_token);\n    return access_token;\n  } catch (err) {\n    console.error(\"Failed to refresh token:\", err);\n    alert(\"Spotify session expired. Please log in again.\");\n    window.location.href = \"/\";\n  }\n}\n\nconst Home = () => {\n  const [mood, setMood] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n  const [isNaming, setIsNaming] = useState(false);\n  const [recommendations, setRecommendations] = useState([]);\n\n  const username = localStorage.getItem(\"username\");\n\n  useEffect(() => {\n    const spotifyToken = localStorage.getItem(\"spotify_token\");\n    if (!spotifyToken) {\n      alert(\"Spotify login failed. Please try again.\");\n      window.location.href = \"/\";\n    }\n  }, []); // Removed the extra closing brace here\n\n  const ensureValidToken = async () => {\n    let token = localStorage.getItem(\"spotify_token\");\n    const expiryTime = localStorage.getItem(\"spotify_token_expires_at\");\n    const now = Date.now();\n\n    if (!token || !expiryTime || now >= Number(expiryTime)) {\n      token = await refreshSpotifyToken();\n    }\n    return token;\n  };\n  \n  const fetchPlaylist = async (mood) => {\n    if (!mood.trim()) {\n      setMessage(\"Please enter a mood first.\");\n      return;\n    }\n  \n    try {\n      const token = localStorage.getItem(\"token\");\n      const spotifyToken = await ensureValidToken();\n      const userId = localStorage.getItem(\"user_id\");\n  \n      // Build the payload and log it for debugging purposes.\n      const payload = {\n        name: `Moodify - ${mood.charAt(0).toUpperCase() + mood.slice(1)} Vibes`,\n        songs: [],\n        mood,\n        createdByVoice: false,\n        voiceCommand: \"\",\n        userId,\n      };\n  \n      console.log(\"Sending payload to generate playlist:\", payload);\n  \n      const response = await axios.post(\n        \"https://moodify-capstone-winter2025.onrender.com/api/playlist/generate\",\n        payload,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"x-spotify-token\": spotifyToken,\n          },\n        }\n      );\n  \n      console.log(\"Playlist response:\", response.data);\n      setPlaylist(response.data?.playlist?.songs || []);\n      setMessage(\"\");\n    } catch (err) {\n      console.error(\"Error generating playlist:\", err.response || err);\n      setMessage(err.response?.data?.error || \"Failed to generate playlist.\");\n    }\n  };\n  \n\n  // Dummy classifyMood function for demonstration purposes.\n  // Replace this function with your actual implementation.\n  const classifyMood = async (transcript) => {\n    return transcript.trim();\n  };\n\n  const startListening = () => {\n    try {\n      const SpeechRecognition =\n        window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (!SpeechRecognition) {\n        setMessage(\"Speech recognition is not supported in your browser.\");\n        return;\n      }\n      \n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n\n      recognition.onstart = () => setIsListening(true);\n\n      recognition.onresult = async (event) => {\n        const transcript = event.results[0][0].transcript;\n        setMood(transcript);\n\n        // ✅ Classify mood using your Python ML API\n        const predictedMood = await classifyMood(transcript);\n        if (!predictedMood) {\n          setMessage(\"Unable to determine mood. Try again.\");\n          return;\n        }\n\n        fetchPlaylist(predictedMood);\n      };\n\n      recognition.onerror = (event) => {\n        console.error(\"Speech recognition error:\", event);\n        setMessage(`Speech recognition error: ${event.error}`);\n      };\n\n      recognition.onend = () => setIsListening(false);\n\n      recognition.start();\n    } catch (err) {\n      console.error(\"Speech recognition failed:\", err);\n      setMessage(\"Speech recognition not supported or blocked.\");\n    }\n  };\n\n  const startNamingByVoice = () => {\n    try {\n      const SpeechRecognition =\n        window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (!SpeechRecognition) {\n        setMessage(\"Speech recognition is not supported in your browser.\");\n        return;\n      }\n\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"en-US\";\n      recognition.start();\n\n      recognition.onstart = () => setIsNaming(true);\n\n      recognition.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setPlaylistName(transcript);\n      };\n\n      recognition.onerror = (event) => {\n        console.error(\"Voice naming error:\", event);\n        setMessage(`Voice naming error: ${event.error}`);\n      };\n\n      recognition.onend = () => setIsNaming(false);\n    } catch (err) {\n      console.error(\"Voice naming failed:\", err);\n      setMessage(\"Voice naming not supported or blocked.\");\n    }\n  };\n\n  const playTrack = async (uri) => {\n    const token = localStorage.getItem(\"spotify_token\");\n    const deviceId = localStorage.getItem(\"device_id\");\n    if (!token || !deviceId) {\n      alert(\"Spotify is not connected.\");\n      return;\n    }\n    try {\n      await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ uris: [uri] }),\n      });\n    } catch (err) {\n      console.error(\"Error playing track:\", err);\n      alert(\"Playback failed. Make sure Spotify is open and logged in.\");\n    }\n  };\n\n  const savePlaylist = async () => {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"user_id\");\n\n    if (!playlist.length) {\n      alert(\"Please generate a playlist first.\");\n      return;\n    }\n\n    try {\n      await axios.post(\n        \"https://moodify-capstone-winter2025.onrender.com/api/playlist/save\",\n        {\n          name: playlistName,\n          songs: playlist,\n          mood,\n          userId,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      alert(\"Playlist saved successfully!\");\n      setPlaylistName(\"\");\n    } catch (err) {\n      console.error(\"Failed to save playlist:\", err);\n      alert(\"Failed to save playlist.\");\n    }\n  };\n\n  const saveToSpotify = async () => {\n    const token = localStorage.getItem(\"spotify_token\");\n    const spotifyUserId = localStorage.getItem(\"spotify_user_id\");\n\n    if (!playlistName || playlist.length === 0) {\n      alert(\"Please generate and name a playlist first.\");\n      return;\n    }\n\n    // 🔍 Log here\n    console.log(\"🎵 Playlist being sent to Spotify:\", playlist);\n\n    const uris = playlist\n      .map((track) => {\n        const match = track.url?.match(/track\\/([a-zA-Z0-9]+)/);\n        return match ? `spotify:track:${match[1]}` : null;\n      })\n      .filter(Boolean);\n\n    // 🔍 Log URIs\n    console.log(\"🎯 Extracted URIs:\", uris);\n\n    if (uris.length === 0) {\n      alert(\"No valid tracks to add. Please regenerate playlist.\");\n      return;\n    }\n\n    try {\n      // Step 1: Create the playlist\n      const createRes = await fetch(\n        `https://api.spotify.com/v1/users/${spotifyUserId}/playlists`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: playlistName,\n            description: \"Created with Moodify 🎵\",\n            public: false,\n          }),\n        }\n      );\n\n      const created = await createRes.json();\n\n      if (!createRes.ok || !created.id) {\n        console.error(\"Spotify playlist creation failed:\", created);\n        alert(\"Spotify playlist creation failed.\");\n        return;\n      }\n\n      // Step 2: Add tracks\n      await fetch(\n        `https://api.spotify.com/v1/playlists/${created.id}/tracks`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ uris }),\n        }\n      );\n\n      alert(\"✅ Playlist saved to your Spotify account!\");\n      window.open(created.external_urls?.spotify || \"https://open.spotify.com\", \"_blank\");\n    } catch (err) {\n      console.error(\"❌ Failed to sync to Spotify:\", err);\n      alert(\"Failed to save playlist to Spotify.\");\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"spotify_token\");\n    localStorage.removeItem(\"user_id\");\n    window.location.href = \"/login\";\n  };\n\n  return (\n    <div className=\"container\">\n      <SpotifyPlayer />\n\n      {/* 🧭 Navigation Menu */}\n      <nav style={{ background: \"#1DB954\", padding: \"10px\" }}>\n        <a href=\"/home\" style={{ color: \"#fff\", marginRight: \"15px\" }}>\n          Home\n        </a>\n        <a href=\"/recommendations\" style={{ color: \"#fff\", marginRight: \"15px\" }}>\n          Recommendations\n        </a>\n        <a href=\"/playlists\" style={{ color: \"#fff\" }}>\n          My Playlists\n        </a>\n      </nav>\n\n      <h1>Welcome to Moodify!</h1>\n      {username && (\n        <h2>\n          Login with Spotify to start Moodify{\" \"}\n          <span role=\"img\" aria-label=\"headphone\">\n            🎧\n          </span>\n        </h2>\n      )}\n      <button onClick={handleLogout}>Logout</button>\n\n      <div>\n        <h2>Generate Playlist</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your mood (e.g., happy, sad)\"\n          value={mood}\n          onChange={(e) => setMood(e.target.value)}\n        />\n        <button onClick={() => fetchPlaylist(mood)}>Generate Playlist</button>\n      </div>\n\n      <div>\n        <button onClick={startListening} disabled={isListening}>\n          {isListening ? \"Listening...\" : \"Speak Your Mood\"}\n        </button>\n      </div>\n\n      <h3>Playlist:</h3>\n      {message && <p>{message}</p>}\n      <ul>\n        {playlist.map((track, index) => (\n          <li\n            key={index}\n            style={{\n              marginBottom: \"12px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {track.albumImage && (\n              <img\n                src={track.albumImage}\n                alt=\"Album Cover\"\n                width=\"50\"\n                height=\"50\"\n                style={{ borderRadius: \"5px\", marginRight: \"10px\" }}\n              />\n            )}\n            <div style={{ flex: 1 }}>\n              <a\n                href={track.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ textDecoration: \"none\", color: \"#1DB954\" }}\n              >\n                {track.name} <span style={{ color: \"#555\" }}>– {track.artist}</span>\n              </a>\n              {track.spotify_uri && (\n                <div>\n                  <button onClick={() => playTrack(track.spotify_uri)} style={{ marginTop: \"5px\" }}>\n                    ▶️ Play in Moodify\n                  </button>\n                </div>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      {playlist.length > 0 && (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Custom Playlist Name (optional)\"\n            value={playlistName}\n            onChange={(e) => setPlaylistName(e.target.value)}\n            style={{ marginTop: \"10px\", padding: \"8px\", width: \"80%\" }}\n          />\n          <button\n            onClick={startNamingByVoice}\n            disabled={isNaming}\n            style={{ marginLeft: \"10px\", padding: \"8px\" }}\n          >\n            🎤 {isNaming ? \"Listening...\" : \"Name by Voice\"}\n          </button>\n\n          <br />\n          <button onClick={savePlaylist} style={{ marginTop: \"10px\" }}>\n            <span role=\"img\" aria-label=\"save\">\n              💾\n            </span>{\" \"}\n            Save this Playlist\n          </button>\n\n          <br />\n          <button onClick={saveToSpotify} style={{ marginTop: \"10px\" }}>\n            💚 Save to Spotify\n          </button>\n        </>\n      )}\n\n      <h3>Recommended for You</h3>\n      <button\n        onClick={async () => {\n          try {\n            const token = localStorage.getItem(\"spotify_token\");\n\n            // ✅ New validation logic: test each track with /recommendations\n            const getValidSeedTracks = async (trackIds, token) => {\n              const valid = [];\n\n              for (const id of trackIds) {\n                const res = await fetch(\n                  `https://api.spotify.com/v1/recommendations?seed_tracks=${id}&limit=1`,\n                  {\n                    headers: { Authorization: `Bearer ${token}` },\n                  }\n                );\n\n                if (res.ok) {\n                  const data = await res.json();\n                  if (data.tracks && data.tracks.length > 0) {\n                    valid.push(id);\n                  } else {\n                    console.warn(`⚠️ No recommendations for seed track: ${id}`);\n                  }\n                } else {\n                  console.warn(`❌ Track not valid for recommendations: ${id} - Status ${res.status}`);\n                }\n\n                if (valid.length >= 3) break; // Spotify allows max 5 seeds, we limit to 3\n              }\n\n              return valid;\n            };\n\n            // Step 1: Get user's top tracks\n            const topTracksRes = await fetch(\"https://api.spotify.com/v1/me/top/tracks?limit=5\", {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            const topTracksText = await topTracksRes.text();\n\n            if (!topTracksRes.ok) {\n              console.error(\"❌ Top tracks fetch failed:\", topTracksRes.status, topTracksText);\n              setMessage(\"Failed to fetch top tracks.\");\n              return;\n            }\n\n            let topTracksData;\n            try {\n              topTracksData = JSON.parse(topTracksText);\n            } catch (e) {\n              console.error(\"❌ Failed to parse top tracks JSON:\", e, topTracksText);\n              setMessage(\"Error parsing top tracks from Spotify.\");\n              return;\n            }\n\n            const rawSeedTracks = topTracksData.items?.map((track) => track.id) || [];\n            console.log(\"🎯 Raw seed tracks:\", rawSeedTracks);\n\n            if (rawSeedTracks.length === 0) {\n              setMessage(\"No top tracks found. Please listen to more songs on Spotify.\");\n              return;\n            }\n\n            // Step 2: Validate recommendation capability\n            const validSeedTracks = await getValidSeedTracks(rawSeedTracks, token);\n            console.log(\"✅ Valid recommendation seeds:\", validSeedTracks);\n\n            if (validSeedTracks.length === 0) {\n              setMessage(\"No valid tracks found for recommendations. Try listening to more music on Spotify.\");\n              return;\n            }\n\n            // Step 3: Fetch recommendations\n            const recRes = await fetch(\n              `https://api.spotify.com/v1/recommendations?seed_tracks=${validSeedTracks.join(\",\")}&limit=10`,\n              {\n                headers: { Authorization: `Bearer ${token}` },\n              }\n            );\n\n            const recText = await recRes.text();\n\n            if (!recRes.ok) {\n              console.error(\"❌ Recommendations fetch failed:\", recRes.status, recText);\n              setMessage(\"Failed to fetch recommendations.\");\n              return;\n            }\n\n            let recData;\n            try {\n              recData = JSON.parse(recText);\n            } catch (e) {\n              console.error(\"❌ Failed to parse recommendations JSON:\", e, recText);\n              setMessage(\"Error parsing recommendations from Spotify.\");\n              return;\n            }\n\n            console.log(\"🎁 Final Recommendations:\", recData);\n\n            setRecommendations(\n              Array.isArray(recData.tracks)\n                ? recData.tracks.map((track) => ({\n                    name: track.name,\n                    artist: track.artists[0]?.name || \"Unknown\",\n                    albumImage: track.album.images[0]?.url || \"\",\n                    url: track.external_urls.spotify,\n                    spotify_uri: track.uri,\n                  }))\n                : []\n            );\n          } catch (err) {\n            console.error(\"💥 Recommendation fetch failed:\", err);\n            setMessage(\"Failed to fetch recommendations.\");\n          }\n        }}\n      >\n        <span role=\"img\" aria-label=\"target\">\n          🎯\n        </span>{\" \"}\n        Show Personalized Recommendations\n      </button>\n\n      <ul>\n        {recommendations.map((track, index) => (\n          <li\n            key={index}\n            style={{\n              marginBottom: \"12px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {track.albumImage && (\n              <img\n                src={track.albumImage}\n                alt=\"Album Cover\"\n                width=\"50\"\n                height=\"50\"\n                style={{ borderRadius: \"5px\", marginRight: \"10px\" }}\n              />\n            )}\n            <div style={{ flex: 1 }}>\n              <a\n                href={track.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ textDecoration: \"none\", color: \"#1DB954\" }}\n              >\n                {track.name}{\" \"}\n                <span style={{ color: \"#555\" }}>– {track.artist}</span>\n              </a>\n              {track.spotify_uri && (\n                <div>\n                  <button onClick={() => playTrack(track.spotify_uri)} style={{ marginTop: \"5px\" }}>\n                    <span role=\"img\" aria-label=\"target\">\n                      ▶️\n                    </span>{\" \"}\n                    Play in Moodify\n                  </button>\n                </div>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}