{"ast":null,"code":"// src/components/SpotifyLogin.js\nimport React,{useEffect}from\"react\";const SpotifyLogin=()=>{const CLIENT_ID=\"cdea26e7b85149eeb1e02a6812690634\";// ✅ Replace with process.env var in future if bundling securely\nconst REDIRECT_URI=window.location.hostname===\"localhost\"?\"http://localhost:3000/callback\":\"https://moodify-i9qm.onrender.com/callback\";const SCOPES=[\"user-read-email\",\"user-read-private\",\"user-top-read\",\"user-read-playback-state\",\"user-modify-playback-state\",\"streaming\",\"playlist-modify-public\",\"playlist-modify-private\"];// 🔐 Generates a random code_verifier\nconst generateCodeVerifier=function(){let length=arguments.length>0&&arguments[0]!==undefined?arguments[0]:128;const possible=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";let text=\"\";for(let i=0;i<length;i++){text+=possible.charAt(Math.floor(Math.random()*possible.length));}return text;};// 🔐 Hash the verifier to generate a code_challenge\nconst generateCodeChallenge=async codeVerifier=>{const encoder=new TextEncoder();const data=encoder.encode(codeVerifier);const digest=await crypto.subtle.digest(\"SHA-256\",data);return btoa(String.fromCharCode(...new Uint8Array(digest))).replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/=+$/,\"\");};const handleLogin=async()=>{// ✅ Clear all old tokens from local storage\nlocalStorage.clear();const codeVerifier=generateCodeVerifier();const codeChallenge=await generateCodeChallenge(codeVerifier);localStorage.setItem(\"code_verifier\",codeVerifier);// ✅ Store for use in callback\nconst args=new URLSearchParams({response_type:\"code\",client_id:CLIENT_ID,scope:SCOPES.join(\" \"),redirect_uri:REDIRECT_URI,code_challenge_method:\"S256\",code_challenge:codeChallenge});window.location=`https://accounts.spotify.com/authorize?${args.toString()}`;};return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\",marginTop:\"50px\"}},/*#__PURE__*/React.createElement(\"h2\",null,\"Login with Spotify to start Moodify\",\" \",/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"headphone\"},\"\\uD83C\\uDFA7\")),/*#__PURE__*/React.createElement(\"button\",{style:{padding:\"10px 20px\",marginTop:\"20px\"},onClick:handleLogin},\"Login with Spotify\"));};export default SpotifyLogin;","map":{"version":3,"names":["React","useEffect","SpotifyLogin","CLIENT_ID","REDIRECT_URI","window","location","hostname","SCOPES","generateCodeVerifier","length","arguments","undefined","possible","text","i","charAt","Math","floor","random","generateCodeChallenge","codeVerifier","encoder","TextEncoder","data","encode","digest","crypto","subtle","btoa","String","fromCharCode","Uint8Array","replace","handleLogin","localStorage","clear","codeChallenge","setItem","args","URLSearchParams","response_type","client_id","scope","join","redirect_uri","code_challenge_method","code_challenge","toString","createElement","style","textAlign","marginTop","role","padding","onClick"],"sources":["/Users/rutvikzalavadiya/Desktop/capstone-1/capstone/frontend-final/src/SpotifyLogin.js"],"sourcesContent":["// src/components/SpotifyLogin.js\nimport React, { useEffect } from \"react\";\n\nconst SpotifyLogin = () => {\n  const CLIENT_ID = \"cdea26e7b85149eeb1e02a6812690634\"; // ✅ Replace with process.env var in future if bundling securely\n  const REDIRECT_URI =\n    window.location.hostname === \"localhost\"\n      ? \"http://localhost:3000/callback\"\n      : \"https://moodify-i9qm.onrender.com/callback\";\n\n      const SCOPES = [\n        \"user-read-email\",\n        \"user-read-private\",\n        \"user-top-read\",\n        \"user-read-playback-state\",\n        \"user-modify-playback-state\",\n        \"streaming\",\n        \"playlist-modify-public\",\n        \"playlist-modify-private\"\n      ];\n      \n\n  // 🔐 Generates a random code_verifier\n  const generateCodeVerifier = (length = 128) => {\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let text = \"\";\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n\n  // 🔐 Hash the verifier to generate a code_challenge\n  const generateCodeChallenge = async (codeVerifier) => {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await crypto.subtle.digest(\"SHA-256\", data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest)))\n      .replace(/\\+/g, \"-\")\n      .replace(/\\//g, \"_\")\n      .replace(/=+$/, \"\");\n  };\n\n  const handleLogin = async () => {\n    // ✅ Clear all old tokens from local storage\n    localStorage.clear();\n  \n    const codeVerifier = generateCodeVerifier();\n    const codeChallenge = await generateCodeChallenge(codeVerifier);\n    localStorage.setItem(\"code_verifier\", codeVerifier); // ✅ Store for use in callback\n  \n    const args = new URLSearchParams({\n      response_type: \"code\",\n      client_id: CLIENT_ID,\n      scope: SCOPES.join(\" \"),\n      redirect_uri: REDIRECT_URI,\n      code_challenge_method: \"S256\",\n      code_challenge: codeChallenge,\n    });\n  \n    window.location = `https://accounts.spotify.com/authorize?${args.toString()}`;\n  };\n  \n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h2>\n        Login with Spotify to start Moodify{\" \"}\n        <span role=\"img\" aria-label=\"headphone\">🎧</span>\n      </h2>\n      <button\n        style={{ padding: \"10px 20px\", marginTop: \"20px\" }}\n        onClick={handleLogin}\n      >\n        Login with Spotify\n      </button>\n    </div>\n  );\n};\n\nexport default SpotifyLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}